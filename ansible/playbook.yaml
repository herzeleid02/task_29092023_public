- name: My first play
  hosts: all
  tasks:
  - name: Ping my hosts
    ansible.builtin.ping:

  - name: Add user "prometheus"
    user:
      name: prometheus
        #groups: prometheus
      shell: /sbin/nologin
      create_home: no
        #append: yes
      create_home: false
      state: present
    become: true

      ### note -- uid value will be regular -- 1001 in my case. building a package for node-exporter with proper logic would be better 

  - name: Creates directory `/opt/node_exporter`
    file:
      path: /opt/node_exporter
      state: directory
      mode: '0755'
    become: yes

  - name: Download node_exporter tarball with check (sha256)
    ansible.builtin.get_url:
      url: https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
      dest: /tmp/
      checksum: sha256:ecc41b3b4d53f7b9c16a370419a25a133e48c09dfc49499d63bcc0c5e0cf3d01

 #theres a download fuction in unarchive -- it cant verify the file 

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/node_exporter-1.6.1.linux-amd64.tar.gz
      dest: /opt/node_exporter
      remote_src: yes
    become: yes

  - name:  Delete the temporary file
    ansible.builtin.file:
      path: /tmp/node_exporter-1.6.1.linux-amd64.tar.gz
      state: absent

  - name: Copy the servicefile for node_exporter
    ansible.builtin.copy:
      src: ./src/prometheus-node_exporter.service
      dest: /etc/systemd/system/prometheus-node_exporter.service
      owner: root
      group: root
      mode: '0777'
    become: yes

  - name: Enable the sevice for node_exporter
    ansible.builtin.systemd:
      name: prometheus-node_exporter.service
      enabled: true
      state: started
      masked: no
    become: yes

      # this is where docker part starts

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    become: yes

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present
    become: yes

  - name: Update apt and install docker-ce (and docker-compose)
    apt:
      name: docker-ce
      name: docker-compose
      state: latest
      update_cache: true
    become: yes

  - name: Enable the sevice for dockerd
    ansible.builtin.systemd:
      name: docker.service
      enabled: true
      state: started
      masked: no
    become: yes

## now the tricky parts
## the proposed process is simple -- it copies the container dir from the local filesystem (since its a git repo) into /opt/task-container

  - name: Creates directory `/opt/task-container`
    file:
      path: /opt/task_container
      state: directory
      owner: root
      group: root 
      mode: '0755'
    become: yes

  - name: Copy the copy the container dir
    ansible.builtin.copy:
      src: ../container/
      dest: /opt/task-container/
      owner: root
      group: root
      mode: '0777'
    become: yes


  - name: Run `docker-compose up` again
    community.docker.docker_compose:
      project_src: /opt/task-container
      build: true
    register: output
    become: yes

